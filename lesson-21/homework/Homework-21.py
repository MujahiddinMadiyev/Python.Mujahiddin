{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ed390a74",
   "metadata": {},
   "source": [
    "# DataFrame 1: Student Grades\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "data1 = {\n",
    "\n",
    "    'Student_ID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
    "\n",
    "    'Math': [85, 90, 78, 92, 88, 95, 89, 79, 83, 91],\n",
    "\n",
    "    'English': [78, 85, 88, 80, 92, 87, 90, 84, 79, 88],\n",
    "\n",
    "    'Science': [90, 92, 85, 88, 94, 79, 83, 91, 87, 89]\n",
    "\n",
    "}\n",
    "\n",
    "df1 = pd.DataFrame(data1)\n",
    "\n",
    "Exercise 1: Calculate the average grade for each student.\n",
    "\n",
    "Exercise 2: Find the student with the highest average grade.\n",
    "\n",
    "Exercise 3: Create a new column 'Total' representing the total marks obtained by each student.\n",
    "\n",
    "Exercise 4: Plot a bar chart to visualize the average grades in each subject."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a91eaf59",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "data1 = {\n",
    "    'Student_ID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
    "    'Math': [85, 90, 78, 92, 88, 95, 89, 79, 83, 91],\n",
    "    'English': [78, 85, 88, 80, 92, 87, 90, 84, 79, 88],\n",
    "    'Science': [90, 92, 85, 88, 94, 79, 83, 91, 87, 89]\n",
    "}\n",
    "\n",
    "df1 = pd.DataFrame(data1)\n",
    "\n",
    "# Exercise 1: Calculate the average grade for each student\n",
    "df1[\"Average\"] = df1[[\"Math\", \"English\", \"Science\"]].mean(axis=1)\n",
    "print(\"Average grades:\\n\", df1[[\"Student_ID\", \"Average\"]])\n",
    "\n",
    "# Exercise 2: Find the student with the highest average grade\n",
    "top_student = df1.loc[df1[\"Average\"].idxmax()]\n",
    "print(\"Top student:\\n\", top_student)\n",
    "\n",
    "# Exercise 3: Create a new column 'Total' representing total marks obtained by each student\n",
    "df1[\"Total\"] = df1[[\"Math\", \"English\", \"Science\"]].sum(axis=1)\n",
    "print(\"Total marks:\\n\", df1[[\"Student_ID\", \"Total\"]])\n",
    "\n",
    "# Exercise 4: Plot a bar chart for average grades in each subject\n",
    "df1[[\"Math\", \"English\", \"Science\"]].mean().plot(kind=\"bar\", title=\"Average Grades per Subject\")\n",
    "plt.xlabel(\"Subjects\")\n",
    "plt.ylabel(\"Average Grade\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbb9426a",
   "metadata": {},
   "source": [
    "# DataFrame 2: Sales Data\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "data2 = {\n",
    "\n",
    "    'Date': pd.date_range(start='2023-01-01', periods=10),\n",
    "\n",
    "    'Product_A': [120, 150, 130, 110, 140, 160, 135, 125, 145, 155],\n",
    "\n",
    "    'Product_B': [90, 110, 100, 80, 95, 105, 98, 88, 102, 112],\n",
    "\n",
    "    'Product_C': [75, 80, 85, 70, 88, 92, 78, 82, 87, 90]\n",
    "\n",
    "}\n",
    "\n",
    "df2 = pd.DataFrame(data2)\n",
    "\n",
    "Exercise 1: Calculate the total sales for each product.\n",
    "\n",
    "Exercise 2: Find the date with the highest total sales.\n",
    "\n",
    "Exercise 3: Calculate the percentage change in sales for each product from the previous day.\n",
    "\n",
    "Exercise 4: Plot a line chart to visualize the sales trends for each product over time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3742719b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data2 = {\n",
    "    'Date': pd.date_range(start='2023-01-01', periods=10),\n",
    "    'Product_A': [120, 150, 130, 110, 140, 160, 135, 125, 145, 155],\n",
    "    'Product_B': [90, 110, 100, 80, 95, 105, 98, 88, 102, 112],\n",
    "    'Product_C': [75, 80, 85, 70, 88, 92, 78, 82, 87, 90]\n",
    "}\n",
    "\n",
    "df2 = pd.DataFrame(data2)\n",
    "\n",
    "# Exercise 1: Calculate total sales for each product\n",
    "total_sales = df2[[\"Product_A\", \"Product_B\", \"Product_C\"]].sum()\n",
    "print(\"Total sales:\\n\", total_sales)\n",
    "\n",
    "# Exercise 2: Find the date with highest total sales\n",
    "df2[\"Total_Sales\"] = df2[[\"Product_A\", \"Product_B\", \"Product_C\"]].sum(axis=1)\n",
    "highest_sales_day = df2.loc[df2[\"Total_Sales\"].idxmax(), \"Date\"]\n",
    "print(\"Date with highest total sales:\", highest_sales_day)\n",
    "\n",
    "# Exercise 3: Calculate percentage change in sales per product\n",
    "df2[[\"Product_A\", \"Product_B\", \"Product_C\"]] = df2[[\"Product_A\", \"Product_B\", \"Product_C\"]].pct_change() * 100\n",
    "print(\"Percentage change in sales:\\n\", df2)\n",
    "\n",
    "# Exercise 4: Plot line chart for sales trends\n",
    "df2.set_index(\"Date\")[[\"Product_A\", \"Product_B\", \"Product_C\"]].plot(title=\"Sales Trends Over Time\")\n",
    "plt.xlabel(\"Date\")\n",
    "plt.ylabel(\"Sales\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "155ba923",
   "metadata": {},
   "source": [
    "# DataFrame 3: Employee Information\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "data3 = {\n",
    "\n",
    "    'Employee_ID': [101, 102, 103, 104, 105, 106, 107, 108, 109, 110],\n",
    "\n",
    "    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Emma', 'Frank', 'Grace', 'Hank', 'Ivy', 'Jack'],\n",
    "\n",
    "    'Department': ['HR', 'IT', 'Marketing', 'IT', 'Finance', 'HR', 'Marketing', 'IT', 'Finance', 'Marketing'],\n",
    "\n",
    "    'Salary': [60000, 75000, 65000, 80000, 70000, 72000, 68000, 78000, 69000, 76000],\n",
    "\n",
    "    'Experience (Years)': [3, 5, 2, 8, 4, 6, 3, 7, 2, 5]\n",
    "\n",
    "}\n",
    "\n",
    "df3 = pd.DataFrame(data3)\n",
    "\n",
    "Exercise 1: Calculate the average salary for each department.\n",
    "\n",
    "Exercise 2: Find the employee with the most experience.\n",
    "\n",
    "Exercise 3: Create a new column 'Salary Increase' representing the percentage increase in salary from the minimum salary in the dataframe.\n",
    "\n",
    "Exercise 4: Plot a bar chart to visualize the distribution of employees across different departments."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "50efc172",
   "metadata": {},
   "outputs": [],
   "source": [
    "data3 = {\n",
    "    'Employee_ID': [101, 102, 103, 104, 105, 106, 107, 108, 109, 110],\n",
    "    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Emma', 'Frank', 'Grace', 'Hank', 'Ivy', 'Jack'],\n",
    "    'Department': ['HR', 'IT', 'Marketing', 'IT', 'Finance', 'HR', 'Marketing', 'IT', 'Finance', 'Marketing'],\n",
    "    'Salary': [60000, 75000, 65000, 80000, 70000, 72000, 68000, 78000, 69000, 76000],\n",
    "    'Experience (Years)': [3, 5, 2, 8, 4, 6, 3, 7, 2, 5]\n",
    "}\n",
    "\n",
    "df3 = pd.DataFrame(data3)\n",
    "\n",
    "# Exercise 1: Calculate the average salary per department\n",
    "avg_salary = df3.groupby(\"Department\")[\"Salary\"].mean()\n",
    "print(\"Average salary per department:\\n\", avg_salary)\n",
    "\n",
    "# Exercise 2: Find employee with the most experience\n",
    "most_experienced = df3.loc[df3[\"Experience (Years)\"].idxmax()]\n",
    "print(\"Most experienced employee:\\n\", most_experienced)\n",
    "\n",
    "# Exercise 3: Create a 'Salary Increase' column representing percentage increase from min salary\n",
    "df3[\"Salary Increase\"] = ((df3[\"Salary\"] - df3[\"Salary\"].min()) / df3[\"Salary\"].min()) * 100\n",
    "print(\"Salary increase:\\n\", df3[[\"Employee_ID\", \"Salary Increase\"]])\n",
    "\n",
    "# Exercise 4: Plot bar chart for employee distribution across departments\n",
    "df3[\"Department\"].value_counts().plot(kind=\"bar\", title=\"Employees per Department\")\n",
    "plt.xlabel(\"Department\")\n",
    "plt.ylabel(\"Number of Employees\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9d3d0e5",
   "metadata": {},
   "source": [
    "# DataFrame 4: Customer Orders\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "data4 = {\n",
    "\n",
    "    'Order_ID': [101, 102, 103, 104, 105, 106, 107, 108, 109, 110],\n",
    "\n",
    "    'Customer_ID': [201, 202, 203, 204, 205, 206, 207, 208, 209, 210],\n",
    "\n",
    "    'Product': ['A', 'B', 'A', 'C', 'B', 'C', 'A', 'C', 'B', 'A'],\n",
    "\n",
    "    'Quantity': [2, 3, 1, 4, 2, 3, 2, 5, 1, 3],\n",
    "\n",
    "    'Total_Price': [120, 180, 60, 240, 160, 270, 140, 300, 90, 180]\n",
    "\n",
    "}\n",
    "\n",
    "df4 = pd.DataFrame(data4)\n",
    "\n",
    "Exercise 1: Calculate the total revenue from all orders.\n",
    "\n",
    "Exercise 2: Find the most ordered product.\n",
    "\n",
    "Exercise 3: Calculate the average quantity of products ordered.\n",
    "\n",
    "Exercise 4: Plot a pie chart to visualize the distribution of sales across different products."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fdf680df",
   "metadata": {},
   "outputs": [],
   "source": [
    "data4 = {\n",
    "    'Order_ID': [101, 102, 103, 104, 105, 106, 107, 108, 109, 110],\n",
    "    'Customer_ID': [201, 202, 203, 204, 205, 206, 207, 208, 209, 210],\n",
    "    'Product': ['A', 'B', 'A', 'C', 'B', 'C', 'A', 'C', 'B', 'A'],\n",
    "    'Quantity': [2, 3, 1, 4, 2, 3, 2, 5, 1, 3],\n",
    "    'Total_Price': [120, 180, 60, 240, 160, 270, 140, 300, 90, 180]\n",
    "}\n",
    "\n",
    "df4 = pd.DataFrame(data4)\n",
    "\n",
    "# Exercise 1: Calculate total revenue from all orders\n",
    "total_revenue = df4[\"Total_Price\"].sum()\n",
    "print(\"Total revenue from orders:\", total_revenue)\n",
    "\n",
    "# Exercise 2: Find the most ordered product\n",
    "most_ordered_product = df4[\"Product\"].value_counts().idxmax()\n",
    "print(\"Most ordered product:\", most_ordered_product)\n",
    "\n",
    "# Exercise 3: Calculate the average quantity of products ordered\n",
    "avg_quantity = df4[\"Quantity\"].mean()\n",
    "print(\"Average quantity of products ordered:\", avg_quantity)\n",
    "\n",
    "# Exercise 4: Plot pie chart for product sales distribution\n",
    "df4.groupby(\"Product\")[\"Total_Price\"].sum().plot(kind=\"pie\", autopct=\"%1.1f%%\", title=\"Sales Distribution by Product\")\n",
    "plt.ylabel(\"\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
